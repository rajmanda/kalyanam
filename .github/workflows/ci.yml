name: NodeJS with Grunt

on:
  push:
    branches:
      - "main"              # Match the main branch
      - "feature/**"        # Match any branch that starts with 'feature'
  pull_request:
    branches:
      - "main"              # Match pull requests targeting the main branch
      - "feature/**"        # Match any pull request targeting branches that start with 'feature'

jobs:
  # build:
  #   runs-on: ubuntu-latest

  #   strategy:
  #     matrix:
  #       node-version: [18.x]
  #       # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Use Node.js ${{ matrix.node-version }}
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: ${{ matrix.node-version }}
  #       cache: 'npm'
  #   - run: npm ci
  #   - run: npm run build --if-present
  #   # - run: npm test

  # docker:
  #   runs-on: ubuntu-latest
  #   needs: build  # Ensure this job runs after the build job

  #   steps:
  #   - name: Login to Docker Hub
  #     uses: docker/login-action@v3
  #     with:
  #       username: ${{ vars.DOCKERHUB_USERNAME }}
  #       password: ${{ secrets.DOCKERHUB_PASSWORD }}

  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v3

  #   - name: Build and push Docker image
  #     uses: docker/build-push-action@v6
  #     with:
  #       push: true
  #       tags: ${{ vars.DOCKERHUB_USERNAME }}/kalyanam:${{ github.run_number }}
  #       build-args: |
  #         NODE_ENV=production
  #       platforms: linux/amd64,linux/arm64
  #       progress: plain

  update-manifest:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the current repository (kalyanam)
      - name: Checkout kalyanam repository
        uses: actions/checkout@v4
        with:
          repository: rajmanda/kalyanam  # Your kalyanam repo
          ref: feature/deploy-kalyanam  # Checkout the target branch
        env:
          GITHUB_TOKEN: ${{ secrets.MY_PERSONAL_ACCESS_TOKEN }}  # Use your new secret here

      # Step 2: Update Kubernetes manifest
      - name: Update Kubernetes manifest
        run: |
          # Update the image in the Kubernetes manifest
          sed -i "s/image: .*/image: dockerrajmanda\\/kalyanam:${{ github.run_number }}/" kalyanam-deployment.yaml
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add kalyanam-deployment.yaml
          git commit -m "Update Docker image to latest version"
          git push origin HEAD:${{ github.ref }}  # Push to the same branch
        env:
          GITHUB_TOKEN: ${{ secrets.MY_PERSONAL_ACCESS_TOKEN }}  # Use your new secret here

      # Step 3: Checkout the tf-gcp-wif repository
      - name: Checkout tf-gcp-wif repo
        uses: actions/checkout@v4
        with:
          repository: rajmanda/tf-gcp-wif  # Your tf-gcp-wif repo
          ref: feature/deploy-kalyanam  # Checkout the target branch
        env:
          GITHUB_TOKEN: ${{ secrets.MY_PERSONAL_ACCESS_TOKEN }}  # Use your new secret here

      # Step 4: Copy the updated manifest to tf-gcp-wif/deploy
      - name: Copy updated manifest to tf-gcp-wif/deploy
        run: |
          cp ../kalyanam/kalyanam-deployment.yaml deploy/kalyanam-deployment.yaml
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add deploy/kalyanam-deployment.yaml
          git commit -m "Copy updated kalyanam-deployment.yaml from kalyanam repo"
          git push origin HEAD:${{ github.ref }}  # Push to the same branch
